<?php

/**
 * @author Mygento Team
 * @copyright 2018-2022 Mygento (https://www.mygento.com)
 * @package Mygento_ImportExport
 */

namespace Mygento\ImportExport\Command;

use Magento\Framework\Console\Cli;
use Magento\Store\Model\Store;
use Magento\UrlRewrite\Service\V1\Data\UrlRewrite;
use Symfony\Component\Console\Helper\ProgressBar;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

/**
 * @SuppressWarnings(PHPMD.CouplingBetweenObjects)
 */
class RegenerateProductUrl extends \Symfony\Component\Console\Command\Command
{
    /**
     * @var \Magento\Framework\App\State
     */
    private $state;

    /**
     * @var \Magento\Catalog\Model\ResourceModel\Product\CollectionFactory
     */
    private $collection;

    /**
     * @var \Magento\CatalogUrlRewrite\Model\ProductUrlRewriteGenerator
     */
    private $productUrlGenerator;

    /**
     * @var \Magento\UrlRewrite\Model\UrlPersistInterface
     */
    private $urlPersist;

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    private $storeManager;

    /**
     * @param \Magento\Framework\App\State $state
     * @param \Magento\Catalog\Model\ResourceModel\Product\CollectionFactory $collection
     * @param \Magento\CatalogUrlRewrite\Model\ProductUrlRewriteGenerator $productUrlGenerator
     * @param \Magento\UrlRewrite\Model\UrlPersistInterface $urlPersist
     * @param \Magento\Store\Model\StoreManagerInterface $storeManager
     */
    public function __construct(
        \Magento\Framework\App\State $state,
        \Magento\Catalog\Model\ResourceModel\Product\CollectionFactory $collection,
        \Magento\CatalogUrlRewrite\Model\ProductUrlRewriteGenerator $productUrlGenerator,
        \Magento\UrlRewrite\Model\UrlPersistInterface $urlPersist,
        \Magento\Store\Model\StoreManagerInterface $storeManager
    ) {
        parent::__construct();
        $this->state = $state;
        $this->collection = $collection;
        $this->productUrlGenerator = $productUrlGenerator;
        $this->urlPersist = $urlPersist;
        $this->storeManager = $storeManager;
    }

    public function execute(InputInterface $input, OutputInterface $output): int
    {
        $error = '<error>Problem for store ID %d, product %s' . PHP_EOL . '%s</error>' . PHP_EOL;

        try {
            $this->state->getAreaCode();
        } catch (\Magento\Framework\Exception\LocalizedException $e) {
            $this->state->setAreaCode('adminhtml');
        }

        $storeId = $input->getOption('store');
        $stores = $this->storeManager->getStores(false);

        foreach ($stores as $store) {
            // SKIP not selected stores
            if ($storeId != Store::DEFAULT_STORE_ID && $store->getId() != $storeId) {
                continue;
            }
            $collection = $this->collection->create()
                ->addStoreFilter($store->getId())
                ->setStoreId($store->getId());

            $collection->addAttributeToSelect(['url_path', 'url_key']);

            /** @var ProgressBar $progressBar */
            $progressBar = new ProgressBar($output, $collection->count());
            $progressBar->setFormat(
                '<info>%message%</info> %current%/%max% [%bar%] %percent:3s%% %elapsed% %memory:6s%'
            );
            $output->writeln('<info>Regen is started.</info>');
            $progressBar->start();
            $progressBar->display();

            foreach ($collection as $product) {
                $product->setStoreId($store->getId());

                $progressBar->setMessage('Product ID: ' . $product->getId());

                $this->urlPersist->deleteByData([
                    UrlRewrite::ENTITY_ID => $product->getId(),
                    UrlRewrite::ENTITY_TYPE => 'product',
                    UrlRewrite::REDIRECT_TYPE => 0,
                    UrlRewrite::STORE_ID => $store->getId(),
                    UrlRewrite::IS_AUTOGENERATED => 1,
                ]);

                $newUrls = $this->productUrlGenerator->generate($product);

                try {
                    $this->urlPersist->replace($newUrls);
                } catch (\Exception $e) {
                    $output->writeln('');
                    $output->writeln(
                        sprintf(
                            $error,
                            $store->getId(),
                            $product->getId(),
                            $e->getMessage(),
                            implode(PHP_EOL, array_keys($newUrls))
                        )
                    );
                }

                $progressBar->advance();
            }
            $progressBar->finish();
            $output->writeln('');
        }

        return Cli::RETURN_SUCCESS;
    }

    protected function configure()
    {
        $this->setName('importexport:product:url')
            ->setDescription('Regenerate url for products')
            ->addOption(
                'store',
                's',
                InputOption::VALUE_REQUIRED,
                'Regenerate for one specific store view',
                \Magento\Store\Model\Store::DEFAULT_STORE_ID
            );
    }
}
