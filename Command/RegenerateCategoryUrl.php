<?php

/**
 * @author Mygento Team
 * @copyright 2018-2022 Mygento (https://www.mygento.com)
 * @package Mygento_ImportExport
 */

namespace Mygento\ImportExport\Command;

use Magento\Framework\App\Area;
use Magento\Framework\Console\Cli;
use Magento\UrlRewrite\Service\V1\Data\UrlRewrite;
use Symfony\Component\Console\Helper\ProgressBar;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

/**
 * @SuppressWarnings(PHPMD.CouplingBetweenObjects)
 */
class RegenerateCategoryUrl extends \Symfony\Component\Console\Command\Command
{
    /**
     * @var \Magento\Framework\App\State
     */
    private $state;

    /**
     * @var \Magento\Catalog\Model\ResourceModel\Category\CollectionFactory
     */
    private $collection;

    /**
     * @var \Magento\CatalogUrlRewrite\Model\CategoryUrlRewriteGenerator
     */
    private $categoryUrlGenerator;

    /**
     * @var \Magento\UrlRewrite\Model\UrlPersistInterface
     */
    private $urlPersist;

    /**
     * @var \Magento\Store\Model\App\Emulation
     */
    private $emulation;

    /**
     * @param \Magento\Framework\App\State $state
     * @param \Magento\Catalog\Model\ResourceModel\Category\CollectionFactory $collection
     * @param \Magento\CatalogUrlRewrite\Model\CategoryUrlRewriteGenerator $catUrlGenerator
     * @param \Magento\UrlRewrite\Model\UrlPersistInterface $urlPersist
     * @param \Magento\Store\Model\App\Emulation $emulation
     */
    public function __construct(
        \Magento\Framework\App\State $state,
        \Magento\Catalog\Model\ResourceModel\Category\CollectionFactory $collection,
        \Magento\CatalogUrlRewrite\Model\CategoryUrlRewriteGenerator $catUrlGenerator,
        \Magento\UrlRewrite\Model\UrlPersistInterface $urlPersist,
        \Magento\Store\Model\App\Emulation $emulation
    ) {
        parent::__construct();
        $this->state = $state;
        $this->collection = $collection;
        $this->categoryUrlGenerator = $catUrlGenerator;
        $this->urlPersist = $urlPersist;
        $this->emulation = $emulation;
    }

    public function execute(InputInterface $input, OutputInterface $output): int
    {
        $error = '<error>Problem for store ID %d, category %s' . PHP_EOL . '%s</error>' . PHP_EOL;

        try {
            $this->state->getAreaCode();
        } catch (\Magento\Framework\Exception\LocalizedException $e) {
            $this->state->setAreaCode('adminhtml');
        }
        $storeId = $input->getOption('store');
        $this->emulation->startEnvironmentEmulation($storeId, Area::AREA_FRONTEND, true);

        $collection = $this->collection->create()
            ->setStore($storeId)
            ->addAttributeToSelect(['name', 'url_path', 'url_key']);

        /** @var ProgressBar $progressBar */
        $progressBar = new ProgressBar($output, $collection->count());
        $progressBar->setFormat(
            '<info>%message%</info> %current%/%max% [%bar%] %percent:3s%% %elapsed% %memory:6s%'
        );
        $output->writeln('<info>Regen is started.</info>');
        $progressBar->start();
        $progressBar->display();

        foreach ($collection as $category) {
            $this->urlPersist->deleteByData([
                UrlRewrite::ENTITY_ID => $category->getId(),
                UrlRewrite::ENTITY_TYPE => 'category',
                UrlRewrite::REDIRECT_TYPE => 0,
                UrlRewrite::STORE_ID => $storeId,
                UrlRewrite::IS_AUTOGENERATED => 1,
            ]);
            $newUrls = $this->categoryUrlGenerator->generate($category);

            try {
                $this->urlPersist->replace($this->filterEmpty($newUrls));
            } catch (\Exception $e) {
                $output->writeln('');
                $output->writeln(
                    sprintf(
                        $error,
                        $storeId,
                        $category->getId(),
                        $e->getMessage(),
                        implode(PHP_EOL, array_keys($newUrls))
                    )
                );
            }

            $progressBar->advance();
        }
        $this->emulation->stopEnvironmentEmulation();
        $progressBar->finish();
        $output->writeln('');

        return Cli::RETURN_SUCCESS;
    }

    /**
     * Console config
     */
    protected function configure()
    {
        $this->setName('importexport:category:url')
            ->setDescription('Regenerate url for categories')
            ->addOption(
                'store',
                's',
                InputOption::VALUE_REQUIRED,
                'Regenerate for one specific store view',
                \Magento\Store\Model\Store::DEFAULT_STORE_ID
            );
    }

    /**
     * Remove entries with request_path=''
     *
     * @param \Magento\UrlRewrite\Service\V1\Data\UrlRewrite[] $urls
     * @return \Magento\UrlRewrite\Service\V1\Data\UrlRewrite[]
     */
    private function filterEmpty($urls)
    {
        $result = [];
        foreach ($urls as $key => $url) {
            $requestPath = $url->getRequestPath();
            if (!empty($requestPath)) {
                $result[$key] = $url;
            }
        }

        return $result;
    }
}
